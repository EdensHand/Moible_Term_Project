package com.example.mobile_term_project;
/*
* This is regenerated by android studio
* */
import android.annotation.SuppressLint;
import android.os.Bundle;
import android.util.Log;
import android.view.MotionEvent;
import android.view.View;
import android.widget.Toast;

import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.TimeZone;

import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;

//On touch listener implemented to allow for clicking functionality defined below
public class MainActivity extends AppCompatActivity implements View.OnTouchListener {

    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'");
    private final ArrayList<String> swipeData = new ArrayList<>();
    private String timeStamp;
    private DatabaseReference swipeRef;
    private float x, y;
    private long startTime;

    String userName;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        userName = getIntent().getStringExtra("USERNAME");
        FirebaseDatabase database = FirebaseDatabase.getInstance();
        swipeRef = database.getReference(userName);
        sdf.setTimeZone(TimeZone.getTimeZone("UTC"));

        EdgeToEdge.enable(this);
        setContentView(R.layout.activity_main);
        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
            v.setOnTouchListener(this);
            return insets;
        });
    }

    private Toast currentToast;

    //This is the begging of the onTouch
    @SuppressLint("ClickableViewAccessibility")
    @Override
    public boolean onTouch(View v, MotionEvent event) {
        switch(event.getAction()) {
            case (MotionEvent.ACTION_DOWN) :
                //retrieve initial x and y on down action
                x = event.getX();
                y = event.getY();
                timeStamp = sdf.format(new Date());
                startTime = System.currentTimeMillis();
                return true;

            case (MotionEvent.ACTION_MOVE) :
                return true;

            case (MotionEvent.ACTION_UP) :
                //retrieves the final x and y and uses simple if else to determine the direction of the swipe
                float newX = event.getX();
                float newY = event.getY();
                String swipeDirection;

                if (Math.abs(x - newX) > Math.abs(y - newY)) {
                    swipeDirection = (x - newX <= 0) ? "Right" : "Left";
                } else {
                    swipeDirection = (y - newY <= 0) ? "Down" : "Up";
                }

                long endTime = System.currentTimeMillis();
                String swipeDuration = String.valueOf(endTime - startTime);

                swipeData.clear();
                swipeData.add(swipeDirection);
                swipeData.add(swipeDuration);
                swipeData.add(timeStamp);

                if (currentToast != null){
                    currentToast.cancel();
                }

                currentToast = Toast.makeText(this, swipeDirection, Toast.LENGTH_SHORT);
                currentToast.show();

                sendSwipeDataToFirebase(swipeData);
                return true;

            case (MotionEvent.ACTION_CANCEL) :
                Log.d("DEBUG_TAG","Action was CANCEL");
                return true;

            case (MotionEvent.ACTION_OUTSIDE) :
                Log.d("DEBUG_TAG","Movement occurred outside bounds of current screen element");
                return true;

            default :
                return super.onTouchEvent(event);
        }
    }

    private void sendSwipeDataToFirebase(ArrayList<String> swipeData) {
        // Create a unique key for each swipe
        String swipeId = swipeRef.push().getKey();

        // Create a map to store the data
        Map<String, Object> swipeMap = new HashMap<>();
        swipeMap.put("swipeDirection", swipeData.get(0));
        swipeMap.put("swipeDuration", swipeData.get(1));
        swipeMap.put("timeStamp", swipeData.get(2));

        // Send the data to Firebase
        assert swipeId != null;
        swipeRef.child(swipeId).setValue(swipeMap)
                .addOnCompleteListener(task -> {
                    if (task.isSuccessful()) {
                        Log.d("Firebase", "Swipe data saved successfully");
                    } else {
                        Log.e("Firebase", "Swipe data save failed", task.getException());
                    }
                });
    }

    public ArrayList<String> getSwipeData(){
        return swipeData;
    }
}